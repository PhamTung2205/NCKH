@model WebTravel.Models.TblTinhThanh
@{
    ViewData["Tile"] = "Tỉnh Thành";
@inject WebTravel.Data.NCKHContext _context;
    var TinhThanh = _context.TblTinhThanhs.ToList();
    var MonAn = _context.TblMonAns.ToList();
    var GiaiTri = _context.TblGiaiTris.ToList();
    var KhachSan = _context.TblKhachSans.ToList();
    var NhaHang = _context.TblNhaHangs.ToList();
}
<style>
    .custom-card {
        border-radius: 15px;
        border: 1px solid #ddd;
        padding: 20px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        max-width: 1200px; /* Mở rộng card */
        margin: 20px auto;
    }
    .custom-card img {
        width: 500px; /* Ảnh lớn hơn */
        height: 300px;
        border-radius: 10px;
        object-fit: cover;
    }
    .custom-card .content {
        padding-left: 20px;
        flex: 1; /* Nội dung mở rộng tự nhiên */
    }
    .custom-card h3 {
        margin-bottom: 10px;
        font-size: 28px; /* Chữ to hơn */
    }
    .custom-card p {
        font-size: 18px; /* Chữ lớn hơn để dễ đọc */
    }

    .custom-carditem {
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
        padding: 15px;
        width: 300px;
        background: white;
    }

        .custom-carditem img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
        }

    .custom-btn {
        background-color: #17d4fc;
        color: white;
        border-radius: 10px;
        font-weight: bold;
        border: none;
        padding: 10px;
        width: 100%;
    }

        .custom-btn:hover {
            background-color: #0bb5df;
        }

    .textname {
        white-space: nowrap; /* Không xuống dòng */
        overflow: hidden; /* Ẩn phần bị tràn */
        text-overflow: ellipsis; /* Hiện dấu "..." khi quá dài */
        width: 100%; /* Đảm bảo phần tử có giới hạn */
        display: block; /* Giữ dạng block để hoạt động đúng */
    }

    .btn-nav {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.2);
        color: white;
        border: none;
        padding: 10px;
        border-radius: 20%;
        cursor: pointer;
    }

    .btn-nav-left {
        left: -50px;
    }

    .btn-nav-right {
        right: -50px;
    }

    .carousel-container {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 20px;
        position: relative;
        margin-top: 50px;
    }
</style>

<div class="container">
    <div class="custom-card">
        <img src="~/img/Tinh_Thanh/@Model.SimageTinhThanh" alt="@Model.SimageTinhThanh">
        <div class="content">
            <h2>@Model.SnameTinhThanh</h2>
            <p>@Model.ScontentTinhThanh</p>
        </div>
    </div>
</div>

<!--Tỉnh thành-->
<h1>Các tỉnh thành nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesTinh()">❮</button>
        <div id="card-containerTinh" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, TinhThanh.Count); i++)
            {
                <div class="card custom-card">
                    <img src="~/img/Tinh_Thanh/@TinhThanh[i].SimageTinhThanh" alt="@TinhThanh[i].SimageTinhThanh">
                    <h5 class="textname mt-3">@TinhThanh[i].SnameTinhThanh</h5>
                    <a asp-controller="TinhThanh" asp-action="Details" asp-route-id="@TinhThanh[i].PkIdTinhThanh">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesTinh()">❯</button>
    </div>
</div>
<!--Khu vui chơi-->
<h1>Các hoạt động giải trí nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesGiaiTri()">❮</button>
        <div id="card-containerGiaiTri" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, GiaiTri.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Giai_Tri/@GiaiTri[i].SimageGiaiTri" alt="@GiaiTri[i].SimageGiaiTri">
                    <h5 class="textname mt-3">@GiaiTri[i].SnameGiaiTri</h5>
                    <a asp-controller="GiaiTri" asp-action="Details" asp-route-id="@GiaiTri[i].PkIdGiaiTri">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesGiaiTri()">❯</button>
    </div>
</div>
<!--Món Ăn-->
<h1>Các món ăn nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesMoAn()">❮</button>
        <div id="card-containerMonAn" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, MonAn.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Mon_An/@MonAn[i].SimageMonAn" alt="@MonAn[i].SimageMonAn">
                    <h5 class="textname mt-3">@MonAn[i].SnameMonAn</h5>
                    <a asp-controller="MonAn" asp-action="Details" asp-route-id="@MonAn[i].PkIdMonAn">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesMonAn()">❯</button>
    </div>
</div>
<!--Nhà Hàng-->
<h1>Các nhà hàng nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesNhaHang()">❮</button>
        <div id="card-containerNhaHang" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, NhaHang.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Nha_Hang/@NhaHang[i].SimageNhaHang" alt="@NhaHang[i].SimageNhaHang">
                    <h5 class="textname mt-3">@NhaHang[i].SnameNhaHang</h5>
                    <a asp-controller="NhaHang" asp-action="Details" asp-route-id="@NhaHang[i].PkIdNhaHang">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesNhaHang()">❯</button>
    </div>
</div>

<!--Khách Sạn-->
<h1>Các khách sạn nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesKhachSan()">❮</button>
        <div id="card-containerKhachSan" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, KhachSan.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Khach_San/@KhachSan[i].SimageKhachSan" alt="@KhachSan[i].SimageKhachSan">
                    <h5 class="textname mt-3">@KhachSan[i].SnameKhachSan</h5>
                    <a asp-controller="KhachSan" asp-action="Details" asp-route-id="@KhachSan[i].PkIdKhachSan">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesKhachSan()">❯</button>
    </div>
</div>
<script>
    const categories = [
        { id: "Tinh", data: @Html.Raw(Json.Serialize(TinhThanh)), folder: "Tinh_Thanh", imageKey: "simageTinhThanh", nameKey: "snameTinhThanh", idKey: "pkIdTinhThanh", controller: "TinhThanh" },
        { id: "GiaiTri", data: @Html.Raw(Json.Serialize(GiaiTri)), folder: "Giai_Tri", imageKey: "simageGiaiTri", nameKey: "snameGiaiTri", idKey: "pkIdGiaiTri", controller: "GiaiTri" },
        { id: "MonAn", data: @Html.Raw(Json.Serialize(MonAn)), folder: "Mon_An", imageKey: "simageMonAn", nameKey: "snameMonAn", idKey: "pkIdMonAn", controller: "MonAn" },
        { id: "NhaHang", data: @Html.Raw(Json.Serialize(NhaHang)), folder: "Nha_Hang", imageKey: "simageNhaHang", nameKey: "snameNhaHang", idKey: "pkIdNhaHang", controller: "NhaHang" },
        { id: "KhachSan", data: @Html.Raw(Json.Serialize(KhachSan)), folder: "Khach_San", imageKey: "simageKhachSan", nameKey: "snameKhachSan", idKey: "pkIdKhachSan", controller: "KhachSan" }

    ];
  var item = @Html.Raw(Json.Serialize(KhachSan))
  console.log(item)
    const visibleCards = 3;
    let baseUrl = "@Url.Content("~/")";

    // Duyệt qua tất cả danh mục để khởi tạo slider
    categories.forEach(category => {
        let currentIndex = 0;

        function renderCards() {
            let container = document.getElementById(`card-container${category.id}`);
            container.innerHTML = "";
            for (let i = 0; i < visibleCards; i++) {
                let imgIndex = (currentIndex + i) % category.data.length;
                let imageUrl = `${baseUrl}img/${category.folder}/${category.data[imgIndex][category.imageKey]}`;
                let itemUrl = `/${category.controller}/Details/${category.data[imgIndex][category.idKey]}`;

                let card = `
                        <div class="card custom-carditem">
                            <img src="${imageUrl}" alt="${category.data[imgIndex][category.imageUrl]}">
                            <h5 class="textname mt-3">${category.data[imgIndex][category.nameKey]}</h5>
                            <a href="${itemUrl}">
                                <button class="custom-btn mt-2">Xem ngay</button>
                            </a>
                        </div>
                    `;
                container.innerHTML += card;
            }
        }

        // Khởi tạo hiển thị ban đầu
        renderCards();

        // Gán sự kiện cho nút điều hướng
        window[`nextImages${category.id}`] = function () {
            currentIndex = (currentIndex + 1) % category.data.length;
            renderCards();
        };

        window[`prevImages${category.id}`] = function () {
            currentIndex = (currentIndex - 1 + category.data.length) % category.data.length;
            renderCards();
        };
    });


</script>