@model WebTravel.Models.TblTinhThanh
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    var userName = HttpContextAccessor.HttpContext.Session.GetString("UserName");
    var userQuyen = HttpContextAccessor.HttpContext.Session.GetString("UserQuyen");
    var userId = HttpContextAccessor.HttpContext.Session.GetString("UserId");
    ViewData["Tile"] = "Tỉnh Thành";
    @inject WebTravel.Data.NCKHContext _context;
    var TinhThanh = _context.TblTinhThanhs.ToList();
    var MonAn = _context.TblMonAns.ToList();
    var GiaiTri = _context.TblGiaiTris.ToList();
    var KhachSan = _context.TblKhachSans.ToList();
    var NhaHang = _context.TblNhaHangs.ToList();
}
<style>
    .custom-card {
        border-radius: 15px;
        border: 1px solid #ddd;
        padding: 20px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        max-width: 1200px; /* Mở rộng card */
        margin: 20px auto;
    }
    .custom-card img {
        width: 500px; /* Ảnh lớn hơn */
        height: 300px;
        border-radius: 10px;
        object-fit: cover;
    }
    .custom-card .content {
        padding-left: 20px;
        flex: 1; /* Nội dung mở rộng tự nhiên */
    }
    .custom-card h3 {
        margin-bottom: 10px;
        font-size: 28px; /* Chữ to hơn */
    }
    .custom-card p {
        font-size: 18px; /* Chữ lớn hơn để dễ đọc */
    }

    .custom-carditem {
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
        padding: 15px;
        width: 300px;
        background: white;
    }

        .custom-carditem img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
        }

    .custom-btn {
        background-color: #17d4fc;
        color: white;
        border-radius: 10px;
        font-weight: bold;
        border: none;
        padding: 10px;
        width: 100%;
    }

        .custom-btn:hover {
            background-color: #0bb5df;
        }

    .textname {
        white-space: nowrap; /* Không xuống dòng */
        overflow: hidden; /* Ẩn phần bị tràn */
        text-overflow: ellipsis; /* Hiện dấu "..." khi quá dài */
        width: 100%; /* Đảm bảo phần tử có giới hạn */
        display: block; /* Giữ dạng block để hoạt động đúng */
    }

    .btn-nav {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.2);
        color: white;
        border: none;
        padding: 10px;
        border-radius: 20%;
        cursor: pointer;
    }

    .btn-nav-left {
        left: -50px;
    }

    .btn-nav-right {
        right: -50px;
    }



    .carousel-container {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 20px;
        position: relative;
        margin-top: 50px;
    }

    
    /* CSS cho form khảo sát */
    .form-container {
        max-width: 600px;
        margin: 40px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .rating {
        display: flex;
        align-items: center;
        margin: 20px 0;
    }

    .bubbles-container {
        display: flex;
        gap: 10px;
    }

    .rating input[type="radio"] {
        display: none;
    }

    .rating label {
        width: 40px;
        height: 40px;
        border: 2px solid #00C4B4;
        border-radius: 50%;
        display: inline-block;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    

    .rating-text {
        margin-left: 15px;
        font-size: 16px;
        color: #333;
    }

    /* CSS cho hiển thị bình luận */
    .comment-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .user-details {
        font-size: 14px;
        color: #6c757d;
    }

    .rating-display {
        display: flex;
        gap: 5px;
        margin: 10px 0;
    }

    .bubble {
        width: 20px;
        height: 20px;
        border: 2px solid #00C4B4;
        border-radius: 50%;
        display: inline-block;
    }

        .active {
            background-color: #00C4B4;
        }

    .star {
        width: 20px;
        height: 20px;
        border: 2px solid #00C4B4;
        border-radius: 50%;
        .comment-content {
        color: #333;
    }
</style>

<div class="container">
    <div class="custom-card">
        <img src="~/img/Tinh_Thanh/@Model.SimageTinhThanh" alt="@Model.SimageTinhThanh">
        <div class="content">
            <h2>@Model.SnameTinhThanh</h2>
            <p>@Model.ScontentTinhThanh</p>
        </div>
    </div>
</div>
<!--Comment-->

<button type="button" id="btn_comment" class="btn btn-outline-primary px-4 rounded-pill fw-semibold" data-bs-toggle="modal"  data-bs-target="#commentModal">
    Bình Luận
</button>

<div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentModalLabel">Bình Luận</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-success mt-3"><!--Thông báo lỗi-->
                        @TempData["Message"] 
                    </div>
                }
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger mt-3">
                        @TempData["Error"]
                    </div>
                }
                <form id="surveyForm" asp-action="SubmitSurvey" asp-controller="TinhThanh" method="post">
                    <input type="hidden" name="entityId" value="@Model.PkIdTinhThanh" />
                        <h2 class="mb-4">Bạn xếp hạng trải nghiệm của mình như thế nào?</h2>
                        <div class="rating">
                            <div class="bubbles-container">
                                <input type="radio" id="star1" name="rating" value="1">
                                <label for="star1" class="bubble"></label>
                                <input type="radio" id="star2" name="rating" value="2">
                                <label for="star2" class="bubble"></label>
                                <input type="radio" id="star3" name="rating" value="3">
                                <label for="star3" class="bubble"></label>
                                <input type="radio" id="star4" name="rating" value="4">
                                <label for="star4" class="bubble"></label>
                                <input type="radio" id="star5" name="rating" value="5">
                                <label for="star5" class="bubble"></label>
                            </div>
                            <span class="rating-text"></span>
                        </div>

                        <div class="mb-4">
                            <h3>Viết đánh giá</h3>
                            <small class="text-muted d-block mb-2">Khung cần thiết ngôn mục. Chọn tói đa chụp rất nhiều ảnh!...</small>
                            <textarea class="form-control" name="review" placeholder="Viết đánh giá của bạn..." rows="4"></textarea>

                        </div>
                      
                            <button type="submit" class="btn btn-primary w-100">Gửi</button>
                        
                    </form>

            </div>
        </div>
    </div>
</div>
<div class="comment-container">
    <div class="user-info">
        <div>
            <div>Hernan</div>
        </div>
    </div>

    <div class="rating-display">
        <span class="star active"></span>
        <span class="star active"></span>
        <span class="star active"></span>
        <span class="star active"></span>
        <span class="star"></span> <!-- Bong bóng thứ 5 không được tô sáng -->
    </div>

    <div class="comment-content">
        Johnson was a great tour guide, he shared his knowledge of this amazing country and the whole tour experience was amazing.
    </div>


</div>
<!--Tỉnh thành-->
<h1>Các tỉnh thành nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesTinh()">❮</button>
        <div id="card-containerTinh" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, TinhThanh.Count); i++)
            {
                <div class="card custom-card">
                    <img src="~/img/Tinh_Thanh/@TinhThanh[i].SimageTinhThanh" alt="@TinhThanh[i].SimageTinhThanh">
                    <h5 class="textname mt-3">@TinhThanh[i].SnameTinhThanh</h5>
                    <a asp-controller="TinhThanh" asp-action="Details" asp-route-id="@TinhThanh[i].PkIdTinhThanh">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesTinh()">❯</button>
    </div>
</div>
<!--Khu vui chơi-->
<h1>Các hoạt động giải trí nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesGiaiTri()">❮</button>
        <div id="card-containerGiaiTri" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, GiaiTri.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Giai_Tri/@GiaiTri[i].SimageGiaiTri" alt="@GiaiTri[i].SimageGiaiTri">
                    <h5 class="textname mt-3">@GiaiTri[i].SnameGiaiTri</h5>
                    <a asp-controller="GiaiTri" asp-action="Details" asp-route-id="@GiaiTri[i].PkIdGiaiTri">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesGiaiTri()">❯</button>
    </div>
</div>
<!--Món Ăn-->
<h1>Các món ăn nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesMoAn()">❮</button>
        <div id="card-containerMonAn" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, MonAn.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Mon_An/@MonAn[i].SimageMonAn" alt="@MonAn[i].SimageMonAn">
                    <h5 class="textname mt-3">@MonAn[i].SnameMonAn</h5>
                    <a asp-controller="MonAn" asp-action="Details" asp-route-id="@MonAn[i].PkIdMonAn">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesMonAn()">❯</button>
    </div>
</div>
<!--Nhà Hàng-->
<h1>Các nhà hàng nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesNhaHang()">❮</button>
        <div id="card-containerNhaHang" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, NhaHang.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Nha_Hang/@NhaHang[i].SimageNhaHang" alt="@NhaHang[i].SimageNhaHang">
                    <h5 class="textname mt-3">@NhaHang[i].SnameNhaHang</h5>
                    <a asp-controller="NhaHang" asp-action="Details" asp-route-id="@NhaHang[i].PkIdNhaHang">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesNhaHang()">❯</button>
    </div>
</div>
<!--Khách Sạn-->
<h1>Các khách sạn nổi bật</h1>
<div class="container mt-4">
    <div class="carousel-container">
        <button class="btn-nav btn-nav-left" onclick="prevImagesKhachSan()">❮</button>
        <div id="card-containerKhachSan" class="d-flex gap-3">
            @for (int i = 0; i < Math.Min(3, KhachSan.Count); i++)
            {
                <div class="card custom-carditem">
                    <img src="~/img/Khach_San/@KhachSan[i].SimageKhachSan" alt="@KhachSan[i].SimageKhachSan">
                    <h5 class="textname mt-3">@KhachSan[i].SnameKhachSan</h5>
                    <a asp-controller="KhachSan" asp-action="Details" asp-route-id="@KhachSan[i].PkIdKhachSan">
                        <button class="custom-btn mt-2">Xem ngay</button>
                    </a>
                </div>
            }
        </div>
        <button class="btn-nav btn-nav-right" onclick="nextImagesKhachSan()">❯</button>
    </div>
</div>
<script>
    const categories = [
        { id: "Tinh", data: @Html.Raw(Json.Serialize(TinhThanh)), folder: "Tinh_Thanh", imageKey: "simageTinhThanh", nameKey: "snameTinhThanh", idKey: "pkIdTinhThanh", controller: "TinhThanh" },
        { id: "GiaiTri", data: @Html.Raw(Json.Serialize(GiaiTri)), folder: "Giai_Tri", imageKey: "simageGiaiTri", nameKey: "snameGiaiTri", idKey: "pkIdGiaiTri", controller: "GiaiTri" },
        { id: "MonAn", data: @Html.Raw(Json.Serialize(MonAn)), folder: "Mon_An", imageKey: "simageMonAn", nameKey: "snameMonAn", idKey: "pkIdMonAn", controller: "MonAn" },
        { id: "NhaHang", data: @Html.Raw(Json.Serialize(NhaHang)), folder: "Nha_Hang", imageKey: "simageNhaHang", nameKey: "snameNhaHang", idKey: "pkIdNhaHang", controller: "NhaHang" },
        { id: "KhachSan", data: @Html.Raw(Json.Serialize(KhachSan)), folder: "Khach_San", imageKey: "simageKhachSan", nameKey: "snameKhachSan", idKey: "pkIdKhachSan", controller: "KhachSan" }

    ];
    var item = @Html.Raw(Json.Serialize(KhachSan))
        console.log(item)
    const visibleCards = 3;
    let baseUrl = "@Url.Content("~/")";

    // Duyệt qua tất cả danh mục để khởi tạo slider
    categories.forEach(category => {
        let currentIndex = 0;

        function renderCards() {
            let container = document.getElementById(`card-container${category.id}`);
            container.innerHTML = "";
            for (let i = 0; i < visibleCards; i++) {
                let imgIndex = (currentIndex + i) % category.data.length;
                let imageUrl = `${baseUrl}img/${category.folder}/${category.data[imgIndex][category.imageKey]}`;
                let itemUrl = `/${category.controller}/Details/${category.data[imgIndex][category.idKey]}`;

                let card = `
                            <div class="card custom-carditem">
                                <img src="${imageUrl}" alt="${category.data[imgIndex][category.imageUrl]}">
                                <h5 class="textname mt-3">${category.data[imgIndex][category.nameKey]}</h5>
                                <a href="${itemUrl}">
                                    <button class="custom-btn mt-2">Xem ngay</button>
                                </a>
                            </div>
                        `;
                container.innerHTML += card;
            }
        }

        // Khởi tạo hiển thị ban đầu
        renderCards();

        // Gán sự kiện cho nút điều hướng
        window[`nextImages${category.id}`] = function () {
            currentIndex = (currentIndex + 1) % category.data.length;
            renderCards();
        };

        window[`prevImages${category.id}`] = function () {
            currentIndex = (currentIndex - 1 + category.data.length) % category.data.length;
            renderCards();
        };
    });


    function checcAcc() {
        let Acc = "@(userId ?? "")";
        if (!Acc || Acc === "") {
            Swal.fire({
                title: "Bạn chưa đăng nhập!",
                text: "Vui lòng đăng nhập để Chatbot có thể quán lý thông tin cho bạn.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đăng nhập",
                cancelButtonText: "Hủy",
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/Login"; // Thay đổi đường dẫn tới trang đăng nhập của bạn
                }
            });
            document.getElementById("chatInput").value = "";
            return;
        }
    }
    const bubbles = document.querySelectorAll('.bubble');
    const radioInputs = document.querySelectorAll('input[name="rating"]');
    const ratingText = document.querySelector('.rating-text');

    // Định nghĩa nhãn cho từng mức đánh giá
    const ratingLabels = {
        1: 'Thất vọng',
        2: 'Tệ',
        3: 'Bình thường',
        4: 'Tốt',
        5: 'Hoàn hảo'
    };

    radioInputs.forEach((input, index) => {
        input.addEventListener('change', () => {
            // Xóa trạng thái active của tất cả bong bóng
            bubbles.forEach(bubble => bubble.classList.remove('active'));

            // Thêm trạng thái active cho các bong bóng từ 1 đến bong bóng được chọn
            for (let i = 0; i <= index; i++) {
                bubbles[i].classList.add('active');
            }

            // Cập nhật nhãn đánh giá
            const ratingValue = input.value;
            ratingText.textContent = ratingLabels[ratingValue];
        });
    });

</script>